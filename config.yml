# user id of discord accounts with permissions to add/remove claims, etc
discord_admins:
- your_discord_id_here
- your_co-owner_discord_id_here (if you have one, otherwise delete :D)

# https://dash.nxyy.shop/settings
api_key: smartnitro_api_key_here

# this can be ignored for 99% of people
# what database the program will use 
database_name: data/database.db

claiming:
  # sellix or sellapp
  # is your platform not here? request it in an issue on github!
  mode: sellix
  
  # THIS IS IMPORTANT, set it to the current time you started reselling using this site (https://unixtimestamp.com/) 
  # This is used to prevent users claiming credits from old purchases. (Credit Duplication, aka: bad stuff)
  start_time: 1690835910
  
  # sellix:   https://dashboard.sellix.io/settings/security
  # sellapp:  https://sell.app/dashboard/settings?settings=developers#:~:text=show%20just%20yet.-,Create%20API%20Key,-API%20Keys%20allow

  api_key: your_api_key_here
  
  # sellix  (only if u have more than 1 shop on your account): https://developers.sellix.io/#authentication
  # sellapp (only if u have more than 1 shop on your account): https://developer.sell.app/authentication#multiple-stores

  # IF YOU ARE USING SELLIX OR SELLAPP, AND YOU DONT HAVE MORE THAN 1 SHOP ON YOUR ACCOUNT, LEAVE IT AS null
  merchant: null

  # sellix:   https://dashboard.sellix.io/products > ID
  # sellapp:  https://sell.app/dashboard/listings > click the product > share > embed product > find "data-sell-product" > copy the ID

  product: 12345



# link displayed on /buy
purchase_link: https://yourshophere.mysellix.io

# https://discord.com/developers/applications
discord_token: discord_bot_token

# webhook where snipes go
hit_webhook:
  url: webhook_url_for_claims_channel
  
  # available variables: [emoji] [nitro] [user] [order] [claimed] [quantity] [time]
  message: "[emoji] Claimed `[nitro]` for [user] `(#[order]) ([claimed]/[quantity])` in `[time]`."
  
  # either all or no emojis (if none, edit to "emoji: {}", and remove basic,boost,classic)
  emojis: 
    basic: <:basic:1211748717171052625>
    boost: <:Boost:1211748736552796180>
    classic: <:Classic:1211748729959350342>

# embed for current queue will be in here
queue_webhook:
  url: webhook_url_for_queue_channel
  
  title_emoji: "<a:nitroBoost:1265486479686373468>" # if you dont want, set to ""
  
  # 1. pick a colour: https://google.com/search?q=color+picker
  # 2. convert to a decimal: https://www.rapidtables.com/convert/number/hex-to-decimal.html
  color: 11032831
  
  emojis:
    claiming: <a:green:1211748723458048081>
    in_queue: <a:yellow:1211748764834865232>
  
  footer_icon: https://cdn.discordapp.com/emojis/1114898869004804106.gif?size=96&quality=lossless # this can be null

  show_eta: true

# embed for vps stats 
vps_webhook:
  url: webhook_url_for_vps_stats_channel

  # 1. pick a colour: https://google.com/search?q=color+picker
  # 2. convert to a decimal: https://www.rapidtables.com/convert/number/hex-to-decimal.html
  color: 11032831

  emojis:
    online: <a:green:1211748723458048081>
    offline: <a:red:1236839024908435476>

  footer_icon: https://cdn.discordapp.com/emojis/1114898869004804106.gif?size=96&quality=lossless # this can be null

# private logs channel
logs_channel: channel_id_for_your_logs


# website to go to for /token

# **all of the above is completely optional**, and you can use https://qr.nxyy.shop completely for free
# if you want to use your own domain: (if you get stuck, search for "cloudflare pages tutorial" on youtube, im sure you can figure it out)
#  1. get https://qr.nxyy.shop/ source code (visit the site -> right click -> View page source -> Copy all of the text)
#  2. create a github repo, and upload and save the code with the file name index.html
#  3. go to dash.cloudflare.com, and select your account
#  4. once you are logged in and your url looks something like: https://dash.cloudflare.com/72517b1ad2f1c7ffb8488e7ae9b1e317
#     add "/pages/new/provider/github" to the end of it, so its like: https://dash.cloudflare.com/72517b1ad2f1c7ffb8488e7ae9b1e317/pages/new/provider/github
#  5. if this is your first time, you need to log into github.
#  6. when thats done, select the repository that you made earlier, and click Begin Setup
#  7. leave all the settings as they are, and click Save and Deploy.
#  8. wait until thats deployed.
#  9. you now have a pages.dev link. if you want your own domain, keep on following along
# 10. scroll down, and click Continue to project
# 11. click Custom domains then Set up a custom domain
# 12. enter your domain (doesnt have to be on cloudflare), and click continue
# 13. if your domain is on cloudflare, then you dont need to mess around with custom DNS, just click Activate domain
# 14. if your domain isnt on cloudflare, then go to your DNS settings for that domain (on namecheap, or wherever you bought that domain), and add the correct DNS settings
# 15. your website should now be online! it can sometimes take a few hours for your DNS settings to update, so just be patient.
qr_code_link: https://qr.nxyy.shop/
